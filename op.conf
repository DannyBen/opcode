## Testing Commands

test:
  op approvals
  op shellcheck
  op shfmt
#? Run all tests

approvals: test/approve
#? Run approval tests

## Linting Commands

shellcheck:
  shellcheck op setup
  green "PASS: shellcheck"
#? Run approval tests

shfmt:
  shfmt -ci -i 2 -d op setup
  green "PASS: shfmt"
#? Run shfmt tests

spell:
  codespell
  green "PASS: codespell"
#? Run spell checker

## Manpage Commands

man-show: op man | man -l
#? Preview the man page using its markdown source

man-save: op man > doc/op.1
#? Convert the markdown man page to man

## Development Commands

version:
  [[ -n $1 ]] || abort 'Usage: op version NEW_VERSION'
  sed -i "s/$(op --version)/$1/g" op README.md
  op man-save
  git commit -am "version bump $1"
  git tag v$1
#? Update version, regenerate and tag
#? Usage: op version NEW_VERSION

private

man:
  export DATE=$(date "+%B %Y")
  export VERSION=$(op --version)
  envsubst <doc/op.md |pandoc -f markdown-smart -s --to man 
#? Generate man to stdout after substituting template vars
